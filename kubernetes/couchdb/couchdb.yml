# The couchdb service is defined here instead of in cluster-config/services
# because some deployments will not put the database within the kube cluster.
---
apiVersion: v1
kind: Service
metadata:
  name: couchdb
  namespace: openwhisk
  labels:
    name: couchdb
spec:
  selector:
    name: couchdb
  ports:
    - port: 5984
      targetPort: 5984
      name: couchdb

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: couchdb
  namespace: openwhisk
  labels:
    name: couchdb
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: couchdb
    spec:
      restartPolicy: Always

      affinity:
        # prefer to not run on an invoker node (only prefer because of single node clusters)
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: openwhisk-role
                operator: NotIn
                values:
                - invoker
        # prefer to run on a control-plane node
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            preference:
              matchExpressions:
              - key: openwhisk-role
                operator: In
                values:
                - control-plane
        # do not allow more than 1 couchdb instance to run on a given node
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: name
                  operator: In
                  values:
                  - couchdb
            topologyKey: "kubernetes.io/hostname"

      volumes:
      - name: couchdb-data
        persistentVolumeClaim:
          claimName: pv-couchdb-01

      containers:
      - name: couchdb
        imagePullPolicy: Always
        image: openwhisk/kube-couchdb
        command: ["/init.sh"]
        ports:
        - name: couchdb
          containerPort: 5984
        volumeMounts:
        - mountPath: /opt/couchdb/data
          name: couchdb-data
        env:
        - name: "DB_PREFIX"
          valueFrom:
            configMapKeyRef:
              name: db.config
              key: db_prefix
        - name: "DB_HOST"
          value: "127.0.0.1"
        - name: "COUCHDB_USER"
          valueFrom:
            secretKeyRef:
              name: db.auth
              key: db_username
        - name: "COUCHDB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: db.auth
              key: db_password
        - name: "DB_PORT"
          value: "5984"
        - name: "NODENAME"
          value: "couchdb0"
        readinessProbe:
          httpGet:
            port: 5984
            # Tempting to say "/$(DB_PREFIX)_activations", but probe runs
            # externally, therefore can't access the container environment...
            path: "/test_activations"
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 10
          timeoutSeconds: 1

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: couchdb-netpol
  namespace: openwhisk
spec:
  podSelector:
    matchLabels:
      name: couchdb
  ingress:
  # Allow controller, invoker, and any pod with access=db to connect to couchdb
  - from:
    - podSelector:
        matchLabels:
          name: controller
    - podSelector:
        matchLabels:
          name: invoker
    - podSelector:
        matchLabels:
          access: db
    ports:
     - port: 5984
