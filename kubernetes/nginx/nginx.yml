---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx
  namespace: openwhisk
  labels:
    name: nginx
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: nginx
    spec:
      restartPolicy: Always

      affinity:
        # prefer to not run on an invoker node (only prefer because of single node clusters)
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: openwhisk-role
                operator: NotIn
                values:
                - invoker
        # prefer to run on an edge node
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            preference:
              matchExpressions:
              - key: openwhisk-role
                operator: In
                values:
                - edge
        # do not allow more than 1 nginx instance to run on a given node
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: name
                  operator: In
                  values:
                  - nginx
            topologyKey: "kubernetes.io/hostname"

      volumes:
      - name: nginx-certs
        secret:
          secretName: nginx
      - name: nginx-conf
        configMap:
          name: nginx
      - name: logs
        emptyDir: {}

      containers:
      - name: nginx
        imagePullPolicy: IfNotPresent
        image: nginx:1.11
        ports:
        - name: http
          containerPort: 80
        - name: http-api
          containerPort: 443
        - name: https-admin
          containerPort: 8443
        volumeMounts:
        - name: nginx-conf
          mountPath: "/etc/nginx/nginx.conf"
          subPath: "nginx.conf"
        - name: nginx-certs
          mountPath: "/etc/nginx/certs"
        - name: logs
          mountPath: "/logs"
