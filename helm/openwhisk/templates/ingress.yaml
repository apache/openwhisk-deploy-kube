# Licensed to the Apache Software Foundation (ASF) under one or more contributor
# license agreements; and to You under the Apache License, Version 2.0.

{{- if eq .Values.whisk.ingress.type "ibm.standard" }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ .Values.whisk.ingress.name | quote }}
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    # A blocking request is held open by the controller for slightly more than 60 seconds
    # before it is responded to with HTTP status code 202 (accepted) and closed.
    # Set to 75s to be on the safe side.
    # See https://console.bluemix.net/docs/containers/cs_annotations.html#proxy-connect-timeout
    # See http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_read_timeout
    ingress.bluemix.net/proxy-read-timeout: "75s"

    # Allow up to 50 MiB body size to support creation of large actions and large
    # parameter sizes.
    # See https://console.bluemix.net/docs/containers/cs_annotations.html#client-max-body-size
    # See http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
    ingress.bluemix.net/client-max-body-size: "size=50m"

    # Add the request_id, generated by nginx, to the request against the controllers. This id will be used as tid there.
    # https://console.bluemix.net/docs/containers/cs_annotations.html#proxy-add-headers
    ingress.bluemix.net/proxy-add-headers: |
      serviceName=controller {
        'X-Request-ID' $request_id;
      }
spec:
  tls:
  - hosts:
    - {{ .Values.whisk.ingress.ibmdomain }}
    secretName: {{ .Values.whisk.ingress.ibmtlssecret }}
  rules:
  - host: {{ .Values.whisk.ingress.ibmdomain }}
    http:
      paths:
      - path: /api/v1/web
        backend:
          serviceName: controller
          servicePort: http
      - path: /api/v1
        backend:
          serviceName: controller
          servicePort: http
      # API GW generated API invocation
      - path: /api
        backend:
          serviceName: apigateway
          servicePort: mgmt
      # API GW health status
      - path: /v1/health-check
        backend:
          serviceName: apigateway
          servicePort: api
      # API management REST APIs
      - path: /v2
        backend:
          serviceName: apigateway
          servicePort: api
      - path: /
        backend:
          serviceName: nginx
          servicePort: http
{{- end }}
