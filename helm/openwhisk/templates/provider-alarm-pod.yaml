# Licensed to the Apache Software Foundation (ASF) under one or more contributor
# license agreements; and to You under the Apache License, Version 2.0.

{{- if .Values.providers.alarm.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.providers.alarm.name | quote }}
  labels:
    name: alarmprovider
{{ include "openwhisk.label_boilerplate" . | indent 4 }}
spec:
  replicas: {{ .Values.providers.alarm.replicaCount }}
  selector:
    matchLabels:
      name: {{ .Values.providers.alarm.name | quote }}
  template:
    metadata:
      labels:
        name: {{ .Values.providers.alarm.name | quote }}
{{ include "openwhisk.label_boilerplate" . | indent 8 }}
    spec:
      restartPolicy: {{ .Values.providers.alarm.restartPolicy }}
      volumes:
        - name: alarm-logs
{{- if .Values.k8s.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.providers.alarm.persistence.pvcName | quote }}
{{- else }}
          emptyDir: {}
{{- end }}
      initContainers:
      # Wait for a controller to be up (which implies couchdb is up as well).
{{ include "openwhisk.readiness.waitForController" . | indent 6 }}
      containers:
      - name: {{ .Values.providers.alarm.name | quote }}
        image: "{{- .Values.providers.alarm.imageName -}}:{{- .Values.providers.alarm.imageTag -}}"
        imagePullPolicy: {{ .Values.providers.alarm.imagePullPolicy | quote }}
        ports:
        - name: alarmprovider
          containerPort: {{ .Values.providers.alarm.apiPort }}
        env:
        {{- if .Values.providers.db.external }}
        # Config database using the external instance
        - name: "DB_PROTOCOL"
          value: {{ .Values.providers.db.protocol | quote }}
        - name: "DB_HOST"
          value: "{{ .Values.providers.db.host }}:{{ .Values.providers.db.port }}"
        - name: "DB_USERNAME"
          value: {{ .Values.providers.db.username | quote }}
        - name: "DB_PASSWORD"
          value: {{ .Values.providers.db.password | quote }}
        {{- else }}
        - name: "DB_PROTOCOL"
          valueFrom:
            configMapKeyRef:
              name: db.config
              key: db_protocol
        - name: "DB_HOST"
          valueFrom:
            configMapKeyRef:
              name: db.config
              key: db_host_port
        - name: "DB_USERNAME"
          valueFrom:
            secretKeyRef:
              name: db.auth
              key: db_username
        - name: "DB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: db.auth
              key: db_password
        {{- end }}
        - name: "DB_PREFIX"
          value: {{ .Values.providers.alarm.dbPrefix | quote }}
        - name: "ROUTER_HOST"
          valueFrom:
            configMapKeyRef:
              name: whisk.config
              key: whisk_api_host_nameAndPort
        - name: "ENDPOINT_AUTH"
          valueFrom:
            configMapKeyRef:
              name: whisk.config
              key: whisk_api_host_nameAndPort
        volumeMounts:
          - name: alarm-logs
            mountPath: /logs
{{- end }}
