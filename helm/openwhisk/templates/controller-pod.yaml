# Licensed to the Apache Software Foundation (ASF) under one or more contributor
# license agreements; and to You under the Apache License, Version 2.0.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.controller.name | quote }}
  labels:
    name: {{ .Values.controller.name | quote }}
{{ include "openwhisk.label_boilerplate" . | indent 4 }}
spec:
  serviceName: {{ .Values.controller.name | quote }}
  podManagementPolicy: "Parallel"
  replicas: {{ .Values.controller.replicaCount }}
  selector:
    matchLabels:
      name: {{ .Values.controller.name | quote }}
  template:
    metadata:
      labels:
        name: {{ .Values.controller.name | quote }}
{{ include "openwhisk.label_boilerplate" . | indent 8 }}
    spec:
      serviceAccountName: ow-core
      restartPolicy: {{ .Values.controller.restartPolicy }}

      {{- if .Values.affinity.enabled }}
      affinity:
{{ include "openwhisk.affinity.core" . | indent 8 }}
{{ include "openwhisk.affinity.selfAntiAffinity" ( .Values.controller.name | quote ) | indent 8 }}
      {{- end }}

      initContainers:
      # The controller must wait for kafka and couchdb to be ready before it starts
{{ include "openwhisk.readiness.waitForKafka" . | indent 6 }}
{{ include "openwhisk.readiness.waitForCouchDB" . | indent 6 }}

      containers:
      - name: {{ .Values.controller.name | quote }}
        imagePullPolicy: {{ .Values.controller.imagePullPolicy | quote }}
        image: "{{- .Values.controller.imageName -}}:{{- .Values.controller.imageTag -}}"
        command: ["/bin/bash", "-c", "/init.sh `hostname | cut -d'-' -f2`"]
        ports:
        - name: controller
          containerPort: {{ .Values.controller.port }}
        - name: akka-remoting
          containerPort: 2552
        - name: akka-mgmt-http
          containerPort: 19999
        livenessProbe:
          httpGet:
            path: "/ping"
            port: {{ .Values.controller.port }}
            scheme: "HTTP"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
        env:
        - name: "PORT"
          value: {{ .Values.controller.port | quote }}

        - name:  "CONFIG_whisk_info_date"
          valueFrom:
            configMapKeyRef:
              name: whisk.config
              key: whisk_info_date
        - name: "CONFIG_whisk_info_buildNo"
          valueFrom:
            configMapKeyRef:
              name: whisk.config
              key: whisk_info_buildNo

        # Java options
        - name: "JAVA_OPTS"
          value: "-Xmx{{- .Values.controller.jvmHeapMB -}}M {{ .Values.controller.jvmOptions }}"

        # specific controller arguments
        - name: "CONTROLLER_OPTS"
          value: {{ .Values.controller.options | quote }}

        # action runtimes
        - name: "RUNTIMES_MANIFEST"
          value: {{ template "openwhisk.runtimes_manifest" . }}

        - name: "CONFIG_whisk_loadbalancer_blackboxFraction"
          value: {{ .Values.whisk.loadbalancer.blackboxFraction | quote }}

        - name: "CONFIG_whisk_loadbalancer_timeoutFactor"
          value: {{ .Values.whisk.loadbalancer.timeoutFactor | quote }}

        # Kafka properties
        - name: "KAFKA_HOSTS"
          value: "{{ include "openwhisk.kafka_host" . }}:{{ .Values.kafka.port }}"
        - name: "KAFKA_HOST_PORT"
          value: {{ .Values.kafka.port | quote }}

        # properties for DB connection
{{ include "openwhisk.dbEnvVars" . | indent 8 }}

        - name: "LIMITS_ACTIONS_SEQUENCE_MAXLENGTH"
          value: {{ .Values.controller.limits.actionsSequenceMaxlength | quote }}
        - name: "LIMITS_TRIGGERS_FIRES_PERMINUTE"
          value: {{ .Values.controller.limits.triggersFiresPerminute | quote }}
        - name: "LIMITS_ACTIONS_INVOKES_PERMINUTE"
          value: {{ .Values.controller.limits.actionsInvokesPerminute | quote }}
        - name: "LIMITS_ACTIONS_INVOKES_CONCURRENT"
          value: {{ .Values.controller.limits.actionsInvokesConcurrent | quote }}

        - name: "CONTROLLER_INSTANCES"
          value: {{ .Values.controller.replicaCount | quote }}
{{- if gt (int .Values.controller.replicaCount) 1 }}
        - name: "CONFIG_whisk_cluster_useClusterBootstrap"
          value: "true"
        - name: "CONFIG_akka_actor_provider"
          value: "cluster"
        - name: "CONFIG_akka_discovery_method"
          value: "kubernetes-api"
        - name: "CONFIG_akka_discovery_kubernetesApi_podNamespace"
          value: {{ .Release.Namespace | quote }}
        - name: "CONFIG_akka_discovery_kubernetesApi_podLabelSelector"
          value: "name={{ .Values.controller.name }}"
        - name: "CONFIG_akka_discovery_kubernetesApi_podPortName"
          value: "akka-mgmt-http"
{{- end }}
