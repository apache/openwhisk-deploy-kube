#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


## Metadata for OpenWhisk configuration
## This describes values that are defined in values.yaml for Helm chart

## apiHostName configuration metadata
whisk:
  __metadata:
    label: "General OpenWhisk configuration"
    description: "System-wide configuration parameters for your OpenWhisk deployment"
  ingress:
    apiHostName:
      __metadata:
        label: "API host name"
        description: "The external hostname or IP address used to access the Ingress of your Kubernetes cluster"
        type: "string"
        required: true
    apiHostPort:
      __metadata:
        label: "API host port"
        description: "The external port used to access the Ingress of your Kubernetes cluster"
        type: "string"
        required: true
    apiHostProto:
      __metadata:
        label: "API host protocol"
        description: "The protocol to be used to connect to the Ingress of your Kubernetes cluster"
        type: "string"
        required: true
        options:
        - label: "http"
          value: "http"
        - label: "https"
          value: "https"
    type:
      __metadata:
        label: "Ingress type"
        description: "The type of Ingress being deployed (NodePort, LoadBalancer, Standard)"
        type: "string"
        required: true
        options:
        - label: "NodePort"
          value: "NodePort"
        - label: "LoadBalancer"
          value: "LoadBalancer"
        - label: "Standard"
          value: "Standard"
    annotations:
      __metadata:
        label: "Ingress Annotations"
        description: "Annotations to add to Ingress resource. Specify as a list of key: value pairs"
        type: "string"
        multiline: true
        required: false
    domain:
      __metadata:
        label: "Ingress Domain"
        description: "The Fully Qualified Host Name for the Ingress domain"
        type: "string"
        required: true
    tls:
      enabled:
        __metadata:
          label: "TLS enabled"
          description: "If TLS is enabled for the Ingress"
          type: "boolean"
          required: true
      secretenabled:
        __metadata:
          label: "Secret enabled"
          description: "If TLS secret is enabled for the Ingress"
          type: "boolean"
          required: true
      createsecret:
        __metadata:
          label: "Create secret"
          description: "If the Ingress TLS secret should be auto-created when chart is deployed"
          type: "boolean"
          required: true
      secretname:
        __metadata:
          label: "TLS Secret name"
          description: "The name of the Ingress TLS secret"
          type: "string"
          required: true
      secrettype:
        __metadata:
          label: "TLS Secret type"
          description: "The type of the Ingress TLS secret"
          type: "string"
          required: true
      crt:
        __metadata:
          label: "TLS crt"
          description: "The TLS certificate for the Ingress"
          type: "string"
          required: true
      key:
        __metadata:
          label: "TLS Key"
          description: "The TLS key for the Ingress"
          type: "string"
          required: true
  auth:
    system:
      __metadata:
        label: "System auth"
        description: "The auth secret for the system namespace"
        type: "string"
        required: true
    guest:
      __metadata:
        label: "Guest auth"
        description: "The auth secret for the guest namespace"
        type: "string"
        required: true
  systemNameSpace:
    __metadata:
      label: "System namespace"
      description: "The namespace in which to install OpenWhisk system actions and packages"
      type: "string"
      required: true
  limits:
    actionsInvokesPerminute:
      __metadata:
        label: "Maximum actions invoked per minute"
        description: "The maximum number of action invocations per minute by a single namespace"
        type: "number"
        required: true
    actionsInvokesConcurrent:
      __metadata:
        label: "Maximum concurrent action invocations"
        description: "The maximum number of concurrent action invocations by a single namespace"
        type: "number"
        required: true
    triggersFiresPerminute:
      __metadata:
        label: "Maximum triggers fired per minute"
        description: "The maximum triggers fired per minute for a single namespace"
        type: "number"
        required: true
    actionsSequenceMaxlength:
      __metadata:
        label: "Maximum length of action sequence"
        description: "The maximum length of an action sequence"
        type: "number"
        required: true
    actions:
      time:
        min:
          __metadata:
            label: "Minimum action time"
            description: "The minimum billing granularity for action execution time"
            type: "string"
            required: true
        max:
          __metadata:
            label: "Maximum action time"
            description: "The maximum allowed execution time for any action"
            type: "string"
            required: true
        std:
          __metadata:
            label: "Standard action time"
            description: "The default maximum execution time for an action"
            type: "string"
            required: true
      memory:
        min:
          __metadata:
            label: "Minimum action memory"
            description: "The minimum memory allocation for an action"
            type: "string"
            required: true
        max:
          __metadata:
            label: "Maximum action memory"
            description: "The maximum allowed memory allocation for an action"
            type: "string"
            required: true
        std:
          __metadata:
            label: "Standard action memory"
            description: "The default memory allocation for an action"
            type: "string"
            required: true
      concurrency:
        min:
          __metadata:
            label: "Minimum action concurrency"
            description: "The minimum number of concurrent requests supported by a single action container"
            type: "number"
            required: true
        max:
          __metadata:
            label: "Maximum action concurrency"
            description: "The maximum number of concurrent requests supported by a single action container"
            type: "number"
            required: true
        std:
          __metadata:
            label: "Standard action concurrency"
            description: "The default number of concurrent requests supported by a single action container"
            type: "number"
            required: true
      log:
        min:
          __metadata:
            label: "Mimimum action log size"
            description: "The mimimum log size for an action invocation"
            type: "string"
            required: true
        max:
          __metadata:
            label: "Maximum action log size"
            description: "The maximum allowed log size for an action invocation"
            type: "string"
            required: true
        std:
          __metadata:
            label: "Standard action log size"
            description: "The default allowed log size for an action invocation"
            type: "string"
            required: true
    activation:
      payload:
        max:
          __metadata:
            label: "Maximum activation payload"
            description: "The maximum size of an activation payload"
            type: "string"
            required: true
  loadbalancer:
    blackboxFraction:
      __metadata:
        label: "Loadbalancer blackbox fraction"
        description: "The fraction of invokers reserved to execute blackbox actions"
        type: "string"
        required: true
    timeoutFactor:
      __metadata:
        label: "Loadbalancer timeout factor"
        description: "The loadbalancer's timeout factor"
        type: "number"
        required: true
  kafka:
    replicationFactor:
      __metadata:
        label: "Kafka topic replication factor"
        description: "The replication factor for all Kafka topics"
        type: "string"
        required: false
    topics:
      cacheInvalidation:
        segmentBytes:
          __metadata:
            label: "cacheInvalidation segment bytes"
            description: "Kafka topic configuration: the cacheInvalidation topic's segment bytes"
            type: "string"
            required: false
        retentionBytes:
          __metadata:
            label: "cacheInvalidation retention bytes"
            description: "Kafka topic configuration: the cacheInvalidation topic's retention bytes"
            type: "string"
            required: false
        retentionMs:
          __metadata:
            label: "cacheInvalidation retention ms"
            description: "Kafka topic configuration: the cacheInvalidation topic's retention ms"
            type: "string"
            required: false
      completed:
        segmentBytes:
          __metadata:
            label: "completed segment bytes"
            description: "Kafka topic configuration: the completed topic's segment bytes"
            type: "string"
            required: false
        retentionBytes:
          __metadata:
            label: "completed retention bytes"
            description: "Kafka topic configuration: the completed topic's retention bytes"
            type: "string"
            required: false
        retentionMs:
          __metadata:
            label: "completed retention ms"
            description: "Kafka topic configuration: the completed topic's retention ms"
            type: "string"
            required: false
      events:
        segmentBytes:
          __metadata:
            label: "events segment bytes"
            description: "Kafka topic configuration: the events topic's segment bytes"
            type: "string"
            required: false
        retentionBytes:
          __metadata:
            label: "events retention bytes"
            description: "Kafka topic configuration: the events topic's retention bytes"
            type: "string"
            required: false
        retentionMs:
          __metadata:
            label: "events retention ms"
            description: "Kafka topic configuration: the events topic's retention ms"
            type: "string"
            required: false
      health:
        segmentBytes:
          __metadata:
            label: "health segment bytes"
            description: "Kafka topic configuration: the health topic's segment bytes"
            type: "string"
            required: false
        retentionBytes:
          __metadata:
            label: "health retention bytes"
            description: "Kafka topic configuration: the health topic's retention bytes"
            type: "string"
            required: false
        retentionMs:
          __metadata:
            label: "health retention ms"
            description: "Kafka topic configuration: the health topic's retention ms"
            type: "string"
            required: false
      invoker:
        segmentBytes:
          __metadata:
            label: "invoker segment bytes"
            description: "Kafka topic configuration: the invoker-N topic's segment bytes"
            type: "string"
            required: false
        retentionBytes:
          __metadata:
            label: "invoker retention bytes"
            description: "Kafka topic configuration: the invoker-N topic's retention bytes"
            type: "string"
            required: false
        retentionMs:
          __metadata:
            label: "invoker retention ms"
            description: "Kafka topic configuration: the invoker-N topic's retention ms"
            type: "string"
            required: false
  containerPool:
    userMemory:
      __metadata:
        label: "Comtainerpool user memory"
        description: "The total memory available to a single Invoker for executing user actions"
        type: "string"
        required: true
  runtimes:
    __metadata:
      label: "Runtimes"
      description: "The JSON file containing the runtimes manifest for this deployment"
      type: "string"
      required: true
  testing:
    includeTests:
      __metadata:
        label: "Include basic tests"
        description: "If basic tests should be included in the Helm test suite"
        type: "boolean"
        required: true
    includeSystemTests:
      __metadata:
        label: "Include system tests"
        description: "If systems tests should be included in the Helm test suite"
        type: "boolean"
        required: true
  versions:
    openwhisk:
      buildDate:
        __metadata:
          label: "OpenWhisk build date"
          description: "The OpenWhisk build date"
          type: "string"
          required: true
      buildNo:
        __metadata:
          label: "OpenWhisk build number"
          description: "The OpenWhisk build number"
          type: "string"
          required: true
      gitTag:
        __metadata:
          label: "OpenWhisk git tag"
          description: "The git tag for openwhisk"
          type: "string"
          required: true
    openwhiskCli:
      tag:
        __metadata:
          label: "CLI tag"
          description: "The git tag for openwhisk-cli"
          type: "string"
          required: true
    openwhiskCatalog:
      gitTag:
        __metadata:
          label: "Catalog git tag"
          description: "The git tag for openwhisk-catalog"
          type: "string"
          required: true
    openwhiskPackageAlarms:
      gitTag:
        __metadata:
          label: "Alarms git tag"
          description: "The git tag for openwhisk-package-alarms"
          type: "string"
          required: true
    openwhiskPackageCloudant:
      gitTag:
        __metadata:
          label: "Cloudant git tag"
          description: "The git tag for openwhisk-package-cloudant"
          type: "string"
          required: true
    openwhiskPackageKafka:
      gitTag:
        __metadata:
          label: "Kafka git tag"
          description: "The git tag for openwhisk-package-kafka"
          type: "string"
          required: true

k8s:
  __metadata:
    label: "Kubernetes configuration"
    description: "Configuration values to describe your Kubernetes cluster"
  domain:
    __metadata:
      label: "Domain"
      description: "The DNS suffix for services in your cluster (eg. \"cluster.local\")"
      type: "string"
      required: true
  dns:
    __metadata:
      label: "Kubernetes DNS service"
      description: "The name of your cluster's DNS service"
      type: "string"
      required: true
  persistence:
    enabled:
      __metadata:
        label: "Persistence enabled"
        description: "If persistence should be enabled"
        type: "boolean"
        required: true
    hasDefaultStorageClass:
      __metadata:
        label: "Has default storage class"
        description: "If your cluster has a default storage class configured"
        type: "boolean"
        required: true
    explicitStorageClass:
      __metadata:
        label: "Explicit storage class"
        description: "The name of the StorageClass to use if not using the default StorageClass"
        type: "string"
        required: false

utility:
  __metadata:
    label: "Utility configuration"
    description: "Update these default values to configure utility images"
  imageName:
    __metadata:
      label: "Image name"
      description: "The name of the OpenWhisk utility image"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "The tag of the OpenWhisk utility image"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"

docker:
  __metadata:
    label: "Docker Registry configuration"
    description: "Change these default values to configure the Docker Registry"
  registry:
    name:
      __metadata:
        label: "Docker Registry name"
        description: "The Docker Registry name"
        type: "string"
        required: false
    username:
      __metadata:
        label: "Docker Registry username"
        description: "The username for the Docker Registry"
        type: "string"
        required: false
    password:
      __metadata:
        label: "Docker Registry password"
        description: "The password for the Docker Registry"
        type: "password"
        required: false
  timezone:
    __metadata:
      label: "Timezone"
      description: "The timezone to use when performing Docker operations"
      type: "string"
      required: false

zookeeper:
  __metadata:
    label: "Zookeeper configuration"
    description: "Update these default values to customize the Zookeeper deployment"
  imageName:
    __metadata:
      label: "Image name"
      description: "The docker image name"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "The docker image tag"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  replicaCount:
    __metadata:
      label: "Replica count"
      description: "Number of zookeeper instances to deploy; must be an odd number."
      type: "number"
      required: true
      options:
      - label: "1"
        value: "1"
      - label: "3"
        value: "3"
      - label: "5"
        value: "5"
  restartPolicy:
    __metadata:
      label: "Restart policy"
      description: "The restart policy for zookeeper pods"
      type: "string"
      required: true
  port:
    __metadata:
      label: "Port"
      description: "The primary zookeeper port"
      type: "string"
      required: true
  serverPort:
    __metadata:
      label: "Server port"
      description: "The zookeeper server port"
      type: "string"
      required: true
  leaderElectionPort:
    __metadata:
      label: "Leader election port"
      description: "The zookeeper leader election port"
      type: "string"
      required: true
  persistence:
    size:
      __metadata:
        label: "Size"
        description: "The persistent volume size"
        type: "string"
        required: true
  config:
    tickTime:
      __metadata:
        label: "Tick time"
        description: "Zookeeper configuration: Tick time"
        type: "number"
        required: true
    initLimit:
      __metadata:
        label: "Init limit"
        description: "Zookeeper configuration: Init limit"
        type: "number"
        required: true
    syncLimit:
      __metadata:
        label: "Sync limit"
        description: "Zookeeper configuration: Sync limit"
        type: "number"
        required: true
    dataDir:
      __metadata:
        label: "Data directory"
        description: "Zookeeper configuration: Data directory"
        type: "string"
        required: true
    dataLogDir:
      __metadata:
        label: "Data log directory"
        description: "Zookeeper configuration: Data log directory"
        type: "string"
        required: true

kafka:
  __metadata:
    label: "Kafka configuration"
    description: "Update these default values to customize the Kafka deployment"
  imageName:
    __metadata:
      label: "Image name"
      description: "The docker image name"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "The docker image tag"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  replicaCount:
    __metadata:
      label: "Replica count"
      description: "Number of Kafka instances to deploy. Currently must be 1"
      type: "number"
      required: true
  restartPolicy:
    __metadata:
      label: "Restart policy"
      description: "The restart policy for Kafka pods"
      type: "string"
      required: true
  port:
    __metadata:
      label: "Port"
      description: "The primary kafka port"
      type: "string"
      required: true
  persistence:
    size:
      __metadata:
        label: "Size"
        description: "The size of the Kafka persistent volume"
        type: "string"
        required: true

db:
  __metadata:
    label: "Database configuration"
    description: "Update these default values to customize the CouchDB deployment"
  external:
    __metadata:
      label: "External"
      description: "If using an externally deployed CouchDB"
      type: "boolean"
      required: true
  wipeAndInit:
    __metadata:
      label: "wipe and initialise"
      description: "If the database should be wiped and initialised when OpenWhisk is deployed"
      type: "boolean"
      required: true
  imageName:
    __metadata:
      label: "Image name"
      description: "The docker image name"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "The docker image tag"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  replicaCount:
    __metadata:
      label: "Replica count"
      description: "Number of database instances to deploy. Currently must be 1"
      type: "number"
      required: true
  restartPolicy:
    __metadata:
      label: "Restart policy"
      description: "The restart policy for database pods"
      type: "string"
      required: true
  host:
    __metadata:
      label: "Host"
      description: "If using an external database, the hostname or IP address to use to connect to the database"
      type: "string"
      required: true
  port:
    __metadata:
      label: "Port"
      description: "If using an external database, the port to use to connect to the database"
      type: "string"
      required: true
  provider:
    __metadata:
      label: "Provider"
      description: "If using an external database, whether it is Cloudant or CouchDB"
      type: "string"
      required: true
      options:
      - label: "CouchDB"
        value: "CouchDB"
      - label: "Cloudant"
        value: "Cloudant"
  protocol:
    __metadata:
      label: "Protocol"
      description: "If using an external database, the protocol to use to connect to the database"
      type: "string"
      required: true
      options:
      - label: "http"
        value: "http"
      - label: "https"
        value: "https"
  auth:
    username:
      __metadata:
        label: "Username"
        description: "The username to use when connecting to the database"
        type: "string"
        required: true
    password:
      __metadata:
        label: "Password"
        description: "The password to use when connecting to the database"
        type: "password"
        required: true
  dbPrefix:
    __metadata:
      label: "Prefix"
      description: "The prefix to use when creating database resources"
      type: "string"
      required: true
  activationsTable:
    __metadata:
      label: "Activations table"
      description: "The name of the activations table"
      type: "string"
      required: true
  actionsTable:
    __metadata:
      label: "Actions table"
      description: "The name of the actions table"
      type: "string"
      required: true
  authsTable:
    __metadata:
      label: "Auths table"
      description: "The name of the auths table"
      type: "string"
      required: true
  persistence:
    size:
      __metadata:
        label: "Size"
        description: "The size of the persistent volume for CouchDB"
        type: "string"
        required: true

nginx:
  __metadata:
    label: "NGINX Configuration"
    description: "Update these default values to customize the NGINX deployment"
  imageName:
    __metadata:
      label: "Image name"
      description: "The docker image name"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "The docker image tag"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  replicaCount:
    __metadata:
      label: "Replica count"
      description: "The number of nginx instances to deploy"
      type: "string"
      required: true
  restartPolicy:
    __metadata:
      label: "Restart policy"
      description: "The restart policy for nginx pods"
      type: "string"
      required: true
  httpPort:
    __metadata:
      label: "HTTP port"
      description: "The port to use for HTTP connections"
      type: "string"
      required: true
  httpsPort:
    __metadata:
      label: "HTTPS port"
      description: "The port to use for HTTPS connections"
      type: "string"
      required: true
  httpsNodePort:
    __metadata:
      label: "HTTPS node port"
      description: "The port for HTTPS connections when using a NodePort Ingress"
      type: "string"
      required: true

controller:
  __metadata:
    label: "Controller configuration"
    description: "Update these default values to customize the OpenWhisk Controller deployment"
  imageName:
    __metadata:
      label: "Image name"
      description: "The docker image name"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "The docker image tag"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  replicaCount:
    __metadata:
      label: "Replica count"
      description: "The number of controller instances to deploy"
      type: "number"
      required: true
  restartPolicy:
    __metadata:
      label: "Restart policy"
      description: "The restart policy for controller pods"
      type: "string"
      required: true
  port:
    __metadata:
      label: "Port"
      description: "The primary port for the controller service"
      type: "string"
      required: true
  options:
    __metadata:
      label: "Options"
      description: "Additional controller command line options"
      type: "string"
      required: false
  jvmHeapMB:
    __metadata:
      label: "JVM heap memory (MB)"
      description: "The maximum Java heap size in megabytes (MB)"
      type: "string"
      required: true
  jvmOptions:
    __metadata:
      label: "JVM options"
      description: "Additional JVM command line options"
      type: "string"
      required: false


invoker:
  __metadata:
    label: "Invoker Configuration"
    description: "Update these default values to customize the OpenWhisk Invoker deployment"
  imageName:
    __metadata:
      label: "Image name"
      description: "Docker image name for the Invoker"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "The docker image tag for the Invoker"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  restartPolicy:
    __metadata:
      label: "Restart policy"
      description: "The restart policy for invoker pods"
      type: "string"
      required: true
  port:
    __metadata:
      label: "Port"
      description: "The primary invoker port"
      type: "string"
      required: true
  options:
    __metadata:
      label: "Additional options"
      description: "Additional command line options to give to the invoker"
      type: "string"
      required: false
  jvmHeapMB:
    __metadata:
      label: "JVM heap memory (MB)"
      description: "the maximum Java heap size in megabytes (MB)"
      type: "string"
      required: true
  jvmOptions:
    __metadata:
      label: "JVM options"
      description: "Additional JVM command line options"
      type: "string"
      required: false
  containerFactory:
    dind:
      __metadata:
        label: "dind"
        description: "If using Docker-in-Docker to run your Kubernetes cluster"
        type: "boolean"
        required: true
    useRunc:
      __metadata:
        label: "useRunc"
        description: "Should the invoker use runc to pause/unpause idle action containers"
        type: "boolean"
        required: true
    impl:
      __metadata:
        label: "impl"
        description: "Which ContainerFactory shoUld be used"
        type: "string"
        required: true
        options:
        - label: "docker"
          value: "docker"
        - label: "kubernetes"
          value: "kubernetes"
    enableConcurrency:
      __metadata:
        label: "Enable concurrency"
        description: "Should the invoker pass `__OW_ALLOW_CONCURRENT=true` to action containers, enabling concurrent execution in supporting runtimes"
        type: "boolean"
        required: true
    networkConfig:
      name:
        __metadata:
          label: "Container Network Name"
          description: "Name of the Docker network to be used by user action containers"
          type: "string"
          required: false
      dns:
        inheritInvokerConfig:
          __metadata:
            label: "Inherit Invoker DNS Configuration"
            description: "Should the user action containers use the same DNS configuration as the Invoker's container?"
            type: "boolean"
            required: false
        overrides:
          nameservers:
            __metadata:
              label: "DNS nameservers"
              description: "A list of IP addresses of DNS nameserver(s) to be used by user action containers"
              type: "string"
              required: false
          search:
            __metadata:
              label: "DNS search domains"
              description: "A list of DNS search domains to be used by user action containers"
              type: "string"
              required: false
          options:
            __metadata:
              label: "options"
              description: "A list of DNS options to be used by user action containers"
              type: "string"
          required: false
    kubernetes:
      replicaCount:
        __metadata:
          label: "ContainerFactory replica count"
          description: "How many instances of the KubernetesContainerFactory should be deployed?"
          type: "number"
          required: true
      agent:
        imageName:
          __metadata:
            label: "InvokerAgent image name"
            description: "The docker image name for the invoker agent"
            type: "string"
            required: true
        imageTag:
          __metadata:
            label: "InvokerAgent image tag"
            description: "The docker image tag for the invoker agent"
            type: "string"
            required: true
        imagePullPolicy:
          __metadata:
            label: "Image pull policy"
            description: "The image pull policy to apply for this image."
            type: "string"
            required: true
            options:
            - label: "Always"
              value: "Always"
            - label: "Never"
              value: "Never"
            - label: "IfNotPresent"
              value: "IfNotPresent"
        enabled:
          __metadata:
            label: "Agent enabled"
            description: "If the experimental invoker agent should be enabled"
            type: "boolean"
            required: true
        port:
          __metadata:
            label: "Agent port"
            description: "The primary invoker agent port"
            type: "string"
            required: true

apigw:
  __metadata:
    label: "API gateway configuration"
    description: "Update these default values to customize the API Gateway deployment"
  imageName:
    __metadata:
      label: "Image name"
      description: "The docker image name"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "The docker image tag"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  replicaCount:
    __metadata:
      label: "Replica count"
      description: "Number of apigw instances to deploy"
      type: "string"
      required: true
  restartPolicy:
    __metadata:
      label: "Restart policy"
      description: "The restart policy for apigw pods"
      type: "string"
      required: true
  apiPort:
    __metadata:
      label: "API port"
      description: "The API port"
      type: "string"
      required: true
  mgmtPort:
    __metadata:
      label: "Management port"
      description: "The management port"
      type: "string"
      required: true

redis:
  __metadata:
    label: "Redis configuration"
    description: "Update these default values to customize the Redis deployment"
  external:
    __metadata:
      label: "External"
      description: "If using an externally deployed Redis"
      type: "boolean"
      required: true
  imageName:
    __metadata:
      label: "Image name"
      description: "The docker image name"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "The docker image tag"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  replicaCount:
    __metadata:
      label: "Replica count"
      description: "The number of redis instances to deploy (currently must be 1)"
      type: "string"
      required: true
  restartPolicy:
    __metadata:
      label: "Restart policy"
      description: "The restart policy for redis pods"
      type: "string"
      required: true
  host:
    __metadata:
      label: "Host"
      description: "If using an external Redis, the hostname or IP address to use to connect to the Redis"
      type: "string"
      required: true
  port:
    __metadata:
      label: "Port"
      description: "The primary service port"
      type: "string"
      required: true
  persistence:
    size:
      __metadata:
        label: "Size"
        description: "The size of the persistent volume for redis"
        type: "string"
        required: true

providers:
  __metadata:
    label: "OpenWhisk providers configuration"
    description: "Update these default values to customize OpenWhisk providers (Alarm, Cloudant and Kafka)"
  db:
    external:
      __metadata:
        label: "External Providers Database"
        description: "If the event providers database is external"
        type: "boolean"
        required: true
    host:
      __metadata:
        label: "Database host"
        description: "The external event providers database host"
        type: "string"
        required: true
    port:
      __metadata:
        label: "Database port"
        description: "The external event providers database port"
        type: "string"
        required: true
    protocol:
      __metadata:
        label: "Database protocol"
        description: "The external event providers database protocol"
        type: "string"
        required: true
        options:
        - label: "http"
          value: "http"
        - label: "https"
          value: "https"
    username:
      __metadata:
        label: "Database username"
        description: "The external event providers database username"
        type: "string"
        required: true
    password:
      __metadata:
        label: "Database password"
        description: "The external event providers database password"
        type: "password"
        required: true

  alarm:
    enabled:
      __metadata:
        label: "Alarm enabled"
        description: "If alarm provider should be enabled"
        type: "boolean"
        required: true
    imageName:
      __metadata:
        label: "Alarm image name"
        description: "The alarm docker image name"
        type: "string"
        required: true
    imageTag:
      __metadata:
        label: "Alarm image tag"
        description: "The alarm docker image tag"
        type: "string"
        required: true
    imagePullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "The image pull policy to apply for this image."
        type: "string"
        required: true
        options:
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
        - label: "IfNotPresent"
          value: "IfNotPresent"
    replicaCount:
      __metadata:
        label: "Alarm replica count"
        description: "The number of alarm provider instances to deploy"
        type: "string"
        required: true
    restartPolicy:
      __metadata:
        label: "Alarm restart policy"
        description: "The restart policy for Alarm provider pods"
        type: "string"
        required: true
    apiPort:
      __metadata:
        label: "Alarm API port"
        description: "The API port for the Alarm provider"
        type: "string"
        required: true
    dbPrefix:
      __metadata:
        label: "Alarm DB prefix"
        description: "The prefix for the Alarm provider's database tables"
        type: "string"
        required: true
    persistence:
      size:
        __metadata:
          label: "Alarm persistence size"
          description: "The size of the persistent volume for the Alarm provider"
          type: "string"
          required: true

  cloudant:
    enabled:
      __metadata:
        label: "Cloudant enabled"
        description: "if Cloudant provider should be enabled"
        type: "boolean"
        required: true
    imageName:
      __metadata:
        label: "Cloudant image name"
        description: "The Cloudant provider docker image name"
        type: "string"
        required: true
    imageTag:
      __metadata:
        label: "Cloudant image tag"
        description: "The Cloudant provider docker image tag"
        type: "string"
        required: true
    imagePullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "The image pull policy to apply for this image."
        type: "string"
        required: true
        options:
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
        - label: "IfNotPresent"
          value: "IfNotPresent"
    replicaCount:
      __metadata:
        label: "Cloudant replica count"
        description: "The number of Cloudant provider instances to deploy"
        type: "string"
        required: true
    restartPolicy:
      __metadata:
        label: "Cloudant restart policy"
        description: "The restart policy for Cloudant provider pods"
        type: "string"
        required: true
    apiPort:
      __metadata:
        label: "Cloudant API port"
        description: "The API port for the Cloudant provider"
        type: "string"
        required: true
    dbPrefix:
      __metadata:
        label: "Cloudant DB prefix"
        description: "The prefix to use for Cloudant provider database tables"
        type: "string"
        required: true
    persistence:
      size:
        __metadata:
          label: "Cloudant persistence size"
          description: "The size of the persistent volume for the Cloudant provider"
          type: "string"
          required: true

  kafka:
    enabled:
      __metadata:
        label: "Kafka enabled"
        description: "If the Kafka provider should be enabled"
        type: "boolean"
        required: true
    imageName:
      __metadata:
        label: "Kafka image name"
        description: "The docker image name for the Kakfa provider"
        type: "string"
        required: true
    imageTag:
      __metadata:
        label: "Kafka image tag"
        description: "The docker image tag for the Kafka provider"
        type: "string"
        required: true
    imagePullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "The image pull policy to apply for this image."
        type: "string"
        required: true
        options:
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
        - label: "IfNotPresent"
          value: "IfNotPresent"
    replicaCount:
      __metadata:
        label: "Kafka replica count"
        description: "The number of instances of the Kafka provider to deploy"
        type: "string"
        required: true
    restartPolicy:
      __metadata:
        label: "Kafka restart policy"
        description: "The restart policy for Kafka provider pods"
        type: "string"
        required: true
    apiPort:
      __metadata:
        label: "Kafka API port"
        description: "The API port for the Kafka provider"
        type: "string"
        required: true
    dbPrefix:
      __metadata:
        label: "Kafka DB prefix"
        description: "The prefix to use for the Kafka provider's database tables"
        type: "string"
        required: true

affinity:
  __metadata:
    label: "Node affinity configuration"
    description: "Labels used to tag Kubernetes worker nodes to enable scheduling affinity"
  enabled:
    __metadata:
      label: "Affinity enabled"
      description: "If affinity should be enabled"
      type: "boolean"
      required: true
  coreNodeLabel:
    __metadata:
      label: "Core node label"
      description: "Label used for worker nodes that should execute OpenWhisk core pods"
      type: "string"
      required: true
  edgeNodeLabel:
    __metadata:
      label: "Edge node label"
      description: "Label used for worker nodes that should execute OpenWhisk Ingress pods"
      type: "string"
      required: true
  invokerNodeLabel:
    __metadata:
      label: "Invoker node label"
      description: "Label used for worker nodes that should execute OpenWhisk Invoker pods and user actions"
      type: "string"
      required: true
  providerNodeLabel:
    __metadata:
      label: "Provider node label"
      description: "Label used for worker nodes that should execute OpenWhisk event provider pods"
      type: "string"
      required: true

toleration:
  __metadata:
    label: "Node toleration configuration"
    description: "Key used for node tolerations"
  enabled:
    __metadata:
      label: "Toleration enabled"
      description: "If toleration should be enabled"
      type: "boolean"
      required: true
  coreValue:
    __metadata:
      label: "Core openwhisk-role toleration value"
      description: "Value used for worker nodes toleration that should execute OpenWhisk core pods"
      type: "string"
      required: true
  edgeValue:
    __metadata:
      label: "Edge openwhisk-role toleration value"
      description: "Value used for worker nodes toleration that should execute OpenWhisk edge pods"
      type: "string"
      required: true
  invokerValue:
    __metadata:
      label: "Invoker openwhisk-role toleration value"
      description: "Value used for worker nodes toleration that should execute OpenWhisk invoker pods"
      type: "string"
      required: true

probes:
  _metadata:
  label: "Pod's Probes Settings"
  description: "Used for configurable liveness and readiness probes timing settings"
  controller:
    initialDelaySeconds:
      _metadata:
      label: "Initial wait time to start probes after container has started"
      description: "Time in seconds to wait before starting the probes on pod in started state."
      type: "number"
      required: false
    periodSeconds:
      _metadata:
      label: "Frequency to perform the probe in seconds"
      description: "Frequency to perform the probe, default is 10, minimun is 1"
      type: "number"
      required: false
    timeoutSeconds:
      _metadata:
      label: "Probe timeout in seconds"
      description: "Probe will timeouts after defined seconds, defaults to 1 second, minimum value is 1"
      type: "number"
      required: false
  zookeeper:
    initialDelaySeconds:
      _metadata:
      label: "Initial wait time to start probes after container has started"
      description: "Time in seconds to wait before starting the probes on pod in started state."
      type: "number"
      required: false
    periodSeconds:
      _metadata:
      label: "Frequency to perform the probe in seconds"
      description: "Frequency to perform the probe, default is 10, minimun is 1"
      type: "number"
      required: false
    timeoutSeconds:
      _metadata:
      label: "Probe timeout in seconds"
      description: "Probe will timeouts after defined seconds, defaults to 1 second, minimum value is 1"
      type: "number"
      required: false

# Metrics
metrics:
  __metadata:
    label: "Metrics configuration"
    description: "configurations to enable and configure Kamon metrics from controller and invoker."
  prometheusEnabled:
    __metadata:
      label: "enable Prometheus support"
      description: "true to enable kamon-prometheus exporter, metrics would be exposed at `/metrics` endpoint"
      type: "boolean"
      required: true
  whiskconfigFile:
    __metadata:
      label: "whiskconfig file name"
      description: "file name of whiskconfig"
      type: "string"
      required: false
  kamonEnabled:
    __metadata:
      label: "enable kamon metrics collection"
      description: "whether metric information is sent to the configured reporters"
      type: "boolean"
      required: true
  kamonTags:
    __metadata:
      label: "enable kamon tag"
      description: "whether to use the Kamon tags when sending metrics"
      type: "boolean"
      required: true
  userMetricsEnabled:
    __metadata:
      label: "enable user metrics"
      description: "true to enable user metrics"
      type: "boolean"
      required: true
pdb:
  _metadata:
  label: "Pod's Disruption Budget"
  description: "Pod Disruption Budget settings for voluntary and nonvoluntary disruptions"
  enable:
    _metadata:
      label: "Enable PDB"
      description: "true to enable pod disruption budgets for pods"
      type: "boolean"
      required: false
  zookeeper:
    _metadata:
      label: "Zookeeper"
    maxUnavailable:
      _metadata:
      label: "Max Unavailable"
      description: "Number of pods from replica set that can be unavailable after the eviction. Should be an absolute number and less than replicaCount value"
      type: "number"
      required: false
  kafka:
    _metadata:
    label: "Kafka"
    maxUnavailable:
      _metadata:
      label: "Max Unavailable"
      description: "Number of pods from replica set that can be unavailable after the eviction. Should be an absolute number and less than replicaCount value"
      type: "number"
      required: false
  controller:
    _metadata:
    label: "Controllers"
    maxUnavailable:
      _metadata:
      label: "Max Unavailable"
      description: "Number of pods from replica set that can be unavailable after the eviction. Should be an absolute number and less than replicaCount value"
      type: "number"
      required: false
  invoker:
    _metadata:
    label: "Invokers"
    maxUnavailable:
      _metadata:
      label: "Max Unavailable"
      description: "Number of pods from replica set that can be unavailable after the eviction. Should be an absolute number and less than replicaCount value"
      type: "number"
      required: false

