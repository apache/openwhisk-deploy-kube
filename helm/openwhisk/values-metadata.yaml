# Licensed to the Apache Software Foundation (ASF) under one or more contributor
# license agreements; and to You under the Apache License, Version 2.0.


## Metadata for OpenWhisk configuration
## This describes values that are defined in values.yaml for Helm chart

## apiHostName configuration metadata
whisk:
  __metadata:
    label: "General OpenWhisk configuration"
    description: "System-wide configuration parameters for your OpenWhisk deployment"
  ingress:
    __metadata:
      label: "Ingress Specification"
      description: "Configuration of the Ingress to be used to access OpenWhisk"
    name:
      __metadata:
        label: "Ingress name"
        description: "a name for the Ingress resource"
        type: "string"
        required: true
    apiHostName:
      __metadata:
        label: "API host name"
        description: "the external hostname or IP address of your Kubernetes cluster"
        type: "string"
        required: true
    apiHostPort:
      __metadata:
        label: "API host port"
        description: "The external port of the Ingress"
        type: "string"
        required: true
    apiHostProto:
      __metadata:
        label: "API host protocol"
        description: "The protocol (http or https) to be used to connect to the Ingress"
        type: "string"
        required: true
        options:
        - label: "http"
          value: "http"
        - label: "https"
          value: "https"
    type:
      __metadata:
        label: "Ingress type"
        description: "The type of Ingress being deployed (NodePort, LoadBalancer, Standard)"
        type: "string"
        required: true
        options:
        - label: "NodePort"
          value: "NodePort"
        - label: "LoadBalancer"
          value: "LoadBalancer"
        - label: "Standard"
          value: "Standard"
    annotations:
      __metadata:
        label: "Ingress Annotations"
        description: "Annotations to add to Ingress resource. Specify as a list of key: value pairs"
        type: "string"
        multiline: true
        required: false
    domain:
      __metadata:
        label: "Ingress Domain"
        description: "The Fully Qualified Host Name for the Ingress domain"
        type: "string"
        required: true
    tls:
      __metadata:
        label: "TLS configuration"
        description: "Configuration of Ingress TLS"
      enabled:
        __metadata:
          label: "TLS enabled"
          description: "if TLS is enabled"
          type: "boolean"
          required: true
      secretenabled:
        __metadata:
          label: "Secret enabled"
          description: "if secret is enabled"
          type: "boolean"
          required: true
      createsecret:
        __metadata:
          label: "Create secret"
          description: "if secret should be auto-created when chart is deployed"
          type: "boolean"
          required: true
      secretname:
        __metadata:
          label: "TLS Secret name"
          description: "TLS secret name"
          type: "string"
          required: true
      secrettype:
        __metadata:
          label: "TLS Secret type"
          description: "TLS secret type"
          type: "string"
          required: true
      crt:
        __metadata:
          label: "TLS crt"
          description: "TLS crt"
          type: "string"
          required: true
      key:
        __metadata:
          label: "TLS Key"
          description: "TLS Key"
          type: "string"
          required: true
  auth:
    system:
      __metadata:
        label: "System auth"
        description: "Auth secret for system namespace"
        type: "string"
        required: true
    guest:
      __metadata:
        label: "Guest auth"
        description: "Auth secret for guest namespace"
        type: "string"
        required: true
  systemNameSpace:
    __metadata:
      label: "System namespace"
      description: "The namespace to install OpenWhisk system actions and packages"
      type: "string"
      required: true
  limits:
    actionsInvokesPerminute:
      __metadata:
        label: "Maximum actions invoked per minute"
        description: "maximum actions invoked per minute by a single namespace"
        type: "number"
        required: true
    actionsInvokesConcurrent:
      __metadata:
        label: "Maximum concurrent action invocations"
        description: "maximum concurrent action invocations by a single namespace"
        type: "number"
        required: true
    triggersFiresPerminute:
      __metadata:
        label: "Maximum triggers fired per minute"
        description: "maximum triggers fired per minute for a single namespace"
        type: "number"
        required: true
    actionsSequenceMaxlength:
      __metadata:
        label: "Maximum length of action sequence"
        description: "maximum length of an action sequence"
        type: "number"
        required: true
    actions:
      time:
        min:
          __metadata:
            label: "Minimum action time"
            description: "Minimum billing granularity for action execution time"
            type: "string"
            required: true
        max:
          __metadata:
            label: "Maximum action time"
            description: "maximum allowed execution time for any action"
            type: "string"
            required: true
        std:
          __metadata:
            label: "Standard action time"
            description: "Default maximum execution time for an action"
            type: "string"
            required: true
      memory:
        min:
          __metadata:
            label: "Minimum action memory"
            description: "Minimum memory allocation for an action"
            type: "string"
            required: true
        max:
          __metadata:
            label: "Maximum action memory"
            description: "Maximum allowed memory allocation for an action"
            type: "string"
            required: true
        std:
          __metadata:
            label: "Standard action memory"
            description: "Standard memory allocation for an action"
            type: "string"
            required: true
      concurrency:
        min:
          __metadata:
            label: "Minimum action concurrency"
            description: "Minimum number of concurrent requests supported by a single action container"
            type: "number"
            required: true
        max:
          __metadata:
            label: "Maximum action concurrency"
            description: "Maximum number of concurrent requests supported by a single action container"
            type: "number"
            required: true
        std:
          __metadata:
            label: "Standard action concurrency"
            description: "Standard number of concurrent requests supported by a single action container"
            type: "number"
            required: true
      log:
        min:
          __metadata:
            label: "Mimimum log size for an action"
            description: "mimimum action log size"
            type: "string"
            required: true
        max:
          __metadata:
            label: "Maximum allowed log size for an action"
            description: "maximum action log size"
            type: "string"
            required: true
        std:
          __metadata:
            label: "Standard allowed log size for an action"
            description: "standard action log size"
            type: "string"
            required: true
    activation:
      payload:
        max:
          __metadata:
            label: "Maximum activation payload"
            description: "Maximum size of an activation payload"
            type: "string"
            required: true
  loadbalancer:
    blackboxFraction:
      __metadata:
        label: "Loadbalancer blackbox fraction"
        description: "Fraction of invokers reserved to execute blackbox actions"
        type: "string"
        required: true
    timeoutFactor:
      __metadata:
        label: "Loadbalancer timeout factor"
        description: "loadbalancer timeout factor"
        type: "number"
        required: true
  kafka:
    __metadata:
      label: "Kafka Topic Configuration"
      description: "Configuration of Kafka topics used for controller/invoker communication"
    replicationFactor:
      __metadata:
        label: "Kafka replication factor"
        description: "kafka replication factor"
        type: "string"
        required: false
    topics:
      cacheInvalidation:
        __metadata:
        label: "Configuration of the cacheInvalidation topic"
        segmentBytes:
          __metadata:
            label: "Kafka topic cache invalidation segment bytes"
            description: "Kafka topic cache invalidation segment bytes"
            type: "string"
            required: false
        retentionBytes:
          __metadata:
            label: "Kafka topic cache invalidation retention bytes"
            description: "Kafka topic cache invalidation retention bytes"
            type: "string"
            required: false
        retentionMs:
          __metadata:
            label: "Kafka topic cache invalidation retention ms"
            description: "Kafka topic cache invalidation retention ms"
            type: "string"
            required: false
      completed:
        __metadata:
        label: "Configuration of the completed-N topics"
        segmentBytes:
          __metadata:
            label: "Kafka topic completed segment bytes"
            description: "Kafka topic completed segment bytes"
            type: "string"
            required: false
        retentionBytes:
          __metadata:
            label: "Kafka topic completed retention bytes"
            description: "Kafka topic completed retention bytes"
            type: "string"
            required: false
        retentionMs:
          __metadata:
            label: "Kafka topic completed retention ms"
            description: "Kafka topic completed retention ms"
            type: "string"
            required: false
      events:
        __metadata:
        label: "Configuration of the events topic"
        segmentBytes:
          __metadata:
            label: "Kafka topic events segment bytes"
            description: "Kafka topic events segment bytes"
            type: "string"
            required: false
        retentionBytes:
          __metadata:
            label: "Kafka topic events retention bytes"
            description: "Kafka topic events retention bytes"
            type: "string"
            required: false
        retentionMs:
          __metadata:
            label: "Kafka topic events retention ms"
            description: "Kafka topic events retention ms"
            type: "string"
            required: false
      health:
        __metadata:
        label: "Configuration of the health-N topics"
        segmentBytes:
          __metadata:
            label: "Kafka topic health segment bytes"
            description: "Kafka topic health segment bytes"
            type: "string"
            required: false
        retentionBytes:
          __metadata:
            label: "Kafka topic health retention bytes"
            description: "Kafka topic health retention bytes"
            type: "string"
            required: false
        retentionMs:
          __metadata:
            label: "Kafka topic health retention ms"
            description: "Kafka topic health retention ms"
            type: "string"
            required: false
      invoker:
        __metadata:
        label: "Configuration of the invoker-N topics"
        segmentBytes:
          __metadata:
            label: "Kafka topic invoker segment bytes"
            description: "Kafka topic invoker segment bytes"
            type: "string"
            required: false
        retentionBytes:
          __metadata:
            label: "Kafka topic invoker retention bytes"
            description: "Kafka topic invoker retention bytes"
            type: "string"
            required: false
        retentionMs:
          __metadata:
            label: "Kafka topic invoker retention ms"
            description: "Kafka topic invoker retention ms"
            type: "string"
            required: false
  containerPool:
    userMemory:
      __metadata:
        label: "Comtainerpool user memory"
        description: "The total memory available to a single Invoker for executing user actions"
        type: "string"
        required: true
  runtimes:
    __metadata:
      label: "Runtimes"
      description: "The JSON file containing the runtimes manifest for this deployment"
      type: "string"
      required: true
  testing:
    includeSystemTests:
      __metadata:
        label: "Include system tests"
        description: "if systems tests should be included"
        type: "boolean"
        required: true
  versions:
    openwhisk:
      buildDate:
        __metadata:
          label: "OpenWhisk build date"
          description: "OpenWhisk build date"
          type: "string"
          required: true
      buildNo:
        __metadata:
          label: "OpenWhisk build number"
          description: "OpenWhisk build number"
          type: "string"
          required: true
      gitTag:
        __metadata:
          label: "OpenWhisk git tag"
          description: "git tag for incubator-openwhisk"
          type: "string"
          required: true
    openwhiskCli:
      tag:
        __metadata:
          label: "CLI tag"
          description: "git tag for incubator-openwhisk-cli"
          type: "string"
          required: true
    openwhiskCatalog:
      gitTag:
        __metadata:
          label: "Catalog git tag"
          description: "git tag for incubator-openwhisk-catalog"
          type: "string"
          required: true
    openwhiskPackageAlarms:
      gitTag:
        __metadata:
          label: "Alarms git tag"
          description: "git tag for incubator-openwhisk-package-alarms"
          type: "string"
          required: true
    openwhiskPackageCloudant:
      gitTag:
        __metadata:
          label: "Cloudant git tag"
          description: "git tag for incubator-openwhisk-package-cloudant"
          type: "string"
          required: true
    openwhiskPackageKafka:
      gitTag:
        __metadata:
          label: "Kafka git tag"
          description: "git tag for incubator-openwhisk-package-kafka"
          type: "string"
          required: true

k8s:
  __metadata:
    label: "Kubernetes configuration"
    description: "Configuration values to describe your Kubernetes cluster"
  domain:
    __metadata:
      label: "Domain"
      description: "The DNS suffix for services in your cluster (eg. \"cluster.local\")"
      type: "string"
      required: true
  dns:
    __metadata:
      label: "DNS nameserver"
      description: "The IP address of the DNS nameserver to use"
      type: "string"
      required: true
  persistence:
    enabled:
      __metadata:
        label: "Persistence enabled"
        description: "if persistence should be enabled"
        type: "boolean"
        required: true
    hasDefaultStorageClass:
      __metadata:
        label: "Has default storage class"
        description: "if default storage class is configured"
        type: "boolean"
        required: true
    explicitStorageClass:
      __metadata:
        label: "Explicit storage class"
        description: "Name of the StorageClass to use if not using the default StorageClass"
        type: "string"
        required: false

utility:
  __metadata:
    label: "Utility configuration"
    description: "Update these default values to configure utilities"
  imageName:
    __metadata:
      label: "Image name"
      description: "Name of the OpenWhisk utility image"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "Tag of the OpenWhisk utility image"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"

docker:
  __metadata:
    label: "Docker registry configuration"
    description: "Update these default values to configure the docker registry"
  registry:
    name:
      __metadata:
        label: "Registry name"
        description: "registry name"
        type: "string"
        required: false
    username:
      __metadata:
        label: "Username"
        description: "username"
        type: "string"
        required: false
    password:
      __metadata:
        label: "Password"
        description: "password"
        type: "password"
        required: false
  timezone:
    __metadata:
      label: "Timezone"
      description: "timezone"
      type: "string"
      required: false

zookeeper:
  __metadata:
    label: "Zookeeper configuration"
    description: "Update these default values to customize the Zookeeper deployment"
  external:
    __metadata:
      label: "External"
      description: "if Zookeeper is external"
      type: "boolean"
      required: true
  name:
    __metadata:
      label: "Name"
      description: "name"
      type: "string"
      required: true
  imageName:
    __metadata:
      label: "Image name"
      description: "image name"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "image tag"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  replicaCount:
    __metadata:
      label: "Replica count"
      description: "Number of zookeeper instances to deploy; must be an odd number."
      type: "number"
      required: true
      options:
      - label: "1"
        value: "1"
      - label: "3"
        value: "3"
      - label: "5"
        value: "5"
  restartPolicy:
    __metadata:
      label: "Restart policy"
      description: "restart policy"
      type: "string"
      required: true
  port:
    __metadata:
      label: "Port"
      description: "port"
      type: "string"
      required: true
  serverPort:
    __metadata:
      label: "Server port"
      description: "server port"
      type: "string"
      required: true
  leaderElectionPort:
    __metadata:
      label: "Leader election port"
      description: "leader election port"
      type: "string"
      required: true
  persistence:
    pvcName:
      __metadata:
        label: "PVC name"
        description: "PVC name"
        type: "string"
        required: true
    size:
      __metadata:
        label: "Size"
        description: "size"
        type: "string"
        required: true
  config:
    tickTime:
      __metadata:
        label: "Tick time"
        description: "Tick time"
        type: "number"
        required: true
    initLimit:
      __metadata:
        label: "Init limit"
        description: "Init limit"
        type: "number"
        required: true
    syncLimit:
      __metadata:
        label: "Sync limit"
        description: "Sync limit"
        type: "number"
        required: true
    dataDir:
      __metadata:
        label: "Data directory"
        description: "Data directory"
        type: "string"
        required: true
    dataLogDir:
      __metadata:
        label: "Data log directory"
        description: "Data log directory"
        type: "string"
        required: true

kafka:
  __metadata:
    label: "Kafka configuration"
    description: "Update these default values to customize the Kafka deployment"
  external:
    __metadata:
      label: "External"
      description: "if Kafka is external"
      type: "boolean"
      required: true
  name:
    __metadata:
      label: "Name"
      description: "name"
      type: "string"
      required: true
  imageName:
    __metadata:
      label: "Image name"
      description: "image name"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "image tag"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  replicaCount:
    __metadata:
      label: "Replica count"
      description: "replica count"
      type: "number"
      required: true
  restartPolicy:
    __metadata:
      label: "Restart policy"
      description: "restart policy"
      type: "string"
      required: true
  port:
    __metadata:
      label: "Port"
      description: "port"
      type: "string"
      required: true
  persistence:
    pvcName:
      __metadata:
        label: "PVC name"
        description: "PVC name"
        type: "string"
        required: true
    size:
      __metadata:
        label: "Size"
        description: "size"
        type: "string"
        required: true

db:
  __metadata:
    label: "Database configuration"
    description: "Update these default values to customize the CouchDB deployment"
  external:
    __metadata:
      label: "External"
      description: "if database is external"
      type: "boolean"
      required: true
  wipeAndInit:
    __metadata:
      label: "wipe and initialise"
      description: "if database should be wiped and initialised when OpenWhisk is deployed"
      type: "boolean"
      required: true
  name:
    __metadata:
      label: "Name"
      description: "name"
      type: "string"
      required: true
  imageName:
    __metadata:
      label: "Image name"
      description: "image name"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "image tag"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  replicaCount:
    __metadata:
      label: "Replica count"
      description: "Number of database instances to deploy. Currently must be 1"
      type: "number"
      required: true
  restartPolicy:
    __metadata:
      label: "Restart policy"
      description: "restart policy"
      type: "string"
      required: true
  host:
    __metadata:
      label: "Host"
      description: "If using an external database, the hostname or IP address to use to connect to the database"
      type: "string"
      required: true
  port:
    __metadata:
      label: "Port"
      description: "If using an external database, the port to use to connect to the database"
      type: "string"
      required: true
  provider:
    __metadata:
      label: "Provider"
      description: "If using an external database, whether it is Cloudant or CouchDB"
      type: "string"
      required: true
      options:
      - label: "CouchDB"
        value: "CouchDB"
      - label: "Cloudant"
        value: "Cloudant"
  protocol:
    __metadata:
      label: "Protocol"
      description: "If using an external database, the protocol to use to connect to the database"
      type: "string"
      required: true
      options:
      - label: "http"
        value: "http"
      - label: "https"
        value: "https"
  auth:
    username:
      __metadata:
        label: "Username"
        description: "Username"
        type: "string"
        required: true
    password:
      __metadata:
        label: "Password"
        description: "Password"
        type: "password"
        required: true
  dbPrefix:
    __metadata:
      label: "Prefix"
      description: "Prefix"
      type: "string"
      required: true
  activationsTable:
    __metadata:
      label: "Activations table"
      description: "Activations table"
      type: "string"
      required: true
  actionsTable:
    __metadata:
      label: "Actions table"
      description: "actions table"
      type: "string"
      required: true
  authsTable:
    __metadata:
      label: "Auths table"
      description: "Auths table"
      type: "string"
      required: true
  persistence:
    pvcName:
      __metadata:
        label: "PVC name"
        description: "PVC name"
        type: "string"
        required: true
    size:
      __metadata:
        label: "Size"
        description: "size"
        type: "string"
        required: true

nginx:
  __metadata:
    label: "NGINX Configuration"
    description: "Update these default values to customize the NGINX deployment"
  name:
    __metadata:
      label: "Name"
      description: "name"
      type: "string"
      required: true
  imageName:
    __metadata:
      label: "Image name"
      description: "image name"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "image tag"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  replicaCount:
    __metadata:
      label: "Replica count"
      description: "replica count"
      type: "string"
      required: true
  restartPolicy:
    __metadata:
      label: "Restart policy"
      description: "restart policy"
      type: "string"
      required: true
  httpPort:
    __metadata:
      label: "HTTP port"
      description: "HTTP port"
      type: "string"
      required: true
  httpsPort:
    __metadata:
      label: "HTTPS port"
      description: "HTTPS port"
      type: "string"
      required: true
  httpsNodePort:
    __metadata:
      label: "HTTPS node port"
      description: "HTTPS node port"
      type: "string"
      required: true

controller:
  __metadata:
    label: "Controller configuration"
    description: "Update these default values to customize the OpenWhisk Controller deployment"
  name:
    __metadata:
      label: "Name"
      description: "name"
      type: "string"
      required: true
  imageName:
    __metadata:
      label: "Image name"
      description: "image name"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "image tag"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  replicaCount:
    __metadata:
      label: "Replica count"
      description: "The number of controller instances to deploy"
      type: "number"
      required: true
  restartPolicy:
    __metadata:
      label: "Restart policy"
      description: "restart policy"
      type: "string"
      required: true
  port:
    __metadata:
      label: "Port"
      description: "port"
      type: "string"
      required: true
  options:
    __metadata:
      label: "Options"
      description: "Additional controller command line options"
      type: "string"
      required: false
  jvmHeapMB:
    __metadata:
      label: "JVM heap memory (MB)"
      description: "the maximum Java heap size in megabytes (MB)"
      type: "string"
      required: true
  jvmOptions:
    __metadata:
      label: "JVM options"
      description: "Additional JVM command line options"
      type: "string"
      required: false


invoker:
  __metadata:
    label: "Invoker Configuration"
    description: "Update these default values to customize the OpenWhisk Invoker deployment"
  name:
    __metadata:
      label: "Name"
      description: "name"
      type: "string"
      required: true
  imageName:
    __metadata:
      label: "Image name"
      description: "Docker image name for the Invoker"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "image tag"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  restartPolicy:
    __metadata:
      label: "Restart policy"
      description: "restart policy"
      type: "string"
      required: true
  port:
    __metadata:
      label: "Port"
      description: "port"
      type: "string"
      required: true
  options:
    __metadata:
      label: "Additional options"
      description: "Additional command line options to give to the invoker"
      type: "string"
      required: false
  jvmHeapMB:
    __metadata:
      label: "JVM heap memory (MB)"
      description: "the maximum Java heap size in megabytes (MB)"
      type: "string"
      required: true
  jvmOptions:
    __metadata:
      label: "JVM options"
      description: "Additional JVM command line options"
      type: "string"
      required: false
  containerFactory:
    dind:
      __metadata:
        label: "dind"
        description: "if using Docker-in-Docker to run your Kubernetes cluster"
        type: "boolean"
        required: true
    useRunc:
      __metadata:
        label: "useRunc"
        description: "Should the invoker use runc to pause/unpause idle action containers"
        type: "boolean"
        required: true
    impl:
      __metadata:
        label: "impl"
        description: "Which ContainerFactory shold be used"
        type: "string"
        required: true
        options:
        - label: "docker"
          value: "docker"
        - label: "kubernetes"
          value: "kubernetes"
    kubernetes:
      __metadata:
        label: "Configuration for KubernetesContainerFactory"
        description: "Additional optional configuration of the KubernetesContainerFactory"
      replicaCount:
        __metadata:
          label: "ContainerFactory replica count"
          description: "How many instances of the KubernetesContainerFactory should be deployed?"
          type: "number"
          required: true
      agent:
        name:
          __metadata:
            label: "name of InvokerAgent"
            description: "agent name"
            type: "string"
            required: true
        imageName:
          __metadata:
            label: "InvokerAgent image name"
            description: "agent image name"
            type: "string"
            required: true
        imageTag:
          __metadata:
            label: "InvokerAgent image tag"
            description: "agent image tag"
            type: "string"
            required: true
        imagePullPolicy:
          __metadata:
            label: "Image pull policy"
            description: "The image pull policy to apply for this image."
            type: "string"
            required: true
            options:
            - label: "Always"
              value: "Always"
            - label: "Never"
              value: "Never"
            - label: "IfNotPresent"
              value: "IfNotPresent"
        enabled:
          __metadata:
            label: "Agent enabled"
            description: "if agent should be enabled"
            type: "boolean"
            required: true
        port:
          __metadata:
            label: "Agent port"
            description: "agent port"
            type: "string"
            required: true
    containerNetwork:
      __metadata:
        label: "Container Network"
        description: "Docker network to be used by user action containers"
        type: "string"
        required: false
    nameservers:
      __metadata:
        label: "Nameservers"
        description: "The DNS nameserver to be used by user action containers"
        type: "string"
        required: false


apigw:
  __metadata:
    label: "API gateway configuration"
    description: "Update these default values to customize the API Gateway deployment"
  name:
    __metadata:
      label: "Name"
      description: "name"
      type: "string"
      required: true
  imageName:
    __metadata:
      label: "Image name"
      description: "image name"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "image tag"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  replicaCount:
    __metadata:
      label: "Replica count"
      description: "replica count"
      type: "string"
      required: true
  restartPolicy:
    __metadata:
      label: "Restart policy"
      description: "restart policy"
      type: "string"
      required: true
  apiPort:
    __metadata:
      label: "API port"
      description: "API port"
      type: "string"
      required: true
  mgmtPort:
    __metadata:
      label: "Management port"
      description: "management port"
      type: "string"
      required: true

redis:
  __metadata:
    label: "Redis configuration"
    description: "Update these default values to customize the Redis deployment"
  name:
    __metadata:
      label: "Name"
      description: "name"
      type: "string"
      required: true
  imageName:
    __metadata:
      label: "Image name"
      description: "image name"
      type: "string"
      required: true
  imageTag:
    __metadata:
      label: "Image tag"
      description: "image tag"
      type: "string"
      required: true
  imagePullPolicy:
    __metadata:
      label: "Image pull policy"
      description: "The image pull policy to apply for this image."
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  replicaCount:
    __metadata:
      label: "Replica count"
      description: "replica count"
      type: "string"
      required: true
  restartPolicy:
    __metadata:
      label: "Restart policy"
      description: "restart policy"
      type: "string"
      required: true
  port:
    __metadata:
      label: "Port"
      description: "port"
      type: "string"
      required: true
  persistence:
    pvcName:
      __metadata:
        label: "PVC name"
        description: "PVC name"
        type: "string"
        required: true
    size:
      __metadata:
        label: "Size"
        description: "size"
        type: "string"
        required: true

providers:
  __metadata:
    label: "OpenWhisk providers configuration"
    description: "Update these default values to customize OpenWhisk providers (Alarm, Cloudant and Kafka)"
  db:
    __metadata:
      label: "OpenWhisk providers' database configuration"
      description: "You only need to update change these values if you want to use a different database for event providers than you are using for the rest of your OpenWhisk deployment"
    external:
      __metadata:
        label: "Databsae external"
        description: "if the event providers database is external"
        type: "boolean"
        required: true
    host:
      __metadata:
        label: "Database host"
        description: "event providers database host"
        type: "string"
        required: true
        required: true
    port:
      __metadata:
        label: "Database port"
        description: "event providers database port"
        type: "string"
        required: true
    protocol:
      __metadata:
        label: "Database protocol"
        description: "event providers database protocol"
        type: "string"
        required: true
        options:
        - label: "http"
          value: "http"
        - label: "https"
          value: "https"
    username:
      __metadata:
        label: "Database username"
        description: "event providers database username"
        type: "string"
        required: true
    password:
      __metadata:
        label: "Database password"
        description: "event providers database password"
        type: "password"
        required: true

  alarm:
    __metadata:
      label: "Alarm provider configuration"
    enabled:
      __metadata:
        label: "Alarm enabled"
        description: "if alarm provider should be enabled"
        type: "boolean"
        required: true
    name:
      __metadata:
        label: "Alarm name"
        description: "Alarm name"
        type: "string"
        required: true
    imageName:
      __metadata:
        label: "Alarm image name"
        description: "Alarm image name"
        type: "string"
        required: true
    imageTag:
      __metadata:
        label: "Alarm image tag"
        description: "Alarm image tag"
        type: "string"
        required: true
    imagePullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "The image pull policy to apply for this image."
        type: "string"
        required: true
        options:
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
        - label: "IfNotPresent"
          value: "IfNotPresent"
    replicaCount:
      __metadata:
        label: "Alarm replica count"
        description: "Alarm replica count"
        type: "string"
        required: true
    restartPolicy:
      __metadata:
        label: "Alarm restart policy"
        description: "Alarm restart policy"
        type: "string"
        required: true
    apiPort:
      __metadata:
        label: "Alarm API port"
        description: "Alarm API port"
        type: "string"
        required: true
    dbPrefix:
      __metadata:
        label: "Alarm DB prefix"
        description: "Alarm DB prefix"
        type: "string"
        required: true
    persistence:
      pvcName:
        __metadata:
          label: "Alarm PVC name"
          description: "Alarm PVC name"
          type: "string"
          required: true
      size:
        __metadata:
          label: "Alarm persistence size"
          description: "Alarm persistence size"
          type: "string"
          required: true

  cloudant:
    __metadata:
      label: "Cloudant provider configuration"
    enabled:
      __metadata:
        label: "Cloudant enabled"
        description: "if Cloudant provider should be enabled"
        type: "boolean"
        required: true
    name:
      __metadata:
        label: "Cloudant name"
        description: "Cloudant name"
        type: "string"
        required: true
    imageName:
      __metadata:
        label: "Cloudant image name"
        description: "Cloudant image name"
        type: "string"
        required: true
    imageTag:
      __metadata:
        label: "Cloudant image tag"
        description: "Cloudant image tag"
        type: "string"
        required: true
    imagePullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "The image pull policy to apply for this image."
        type: "string"
        required: true
        options:
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
        - label: "IfNotPresent"
          value: "IfNotPresent"
    replicaCount:
      __metadata:
        label: "Cloudant replica count"
        description: "Cloudant replica count"
        type: "string"
        required: true
    restartPolicy:
      __metadata:
        label: "Cloudant restart policy"
        description: "Cloudant restart policy"
        type: "string"
        required: true
    apiPort:
      __metadata:
        label: "Cloudant API port"
        description: "Cloudant API port"
        type: "string"
        required: true
    dbPrefix:
      __metadata:
        label: "Cloudant DB prefix"
        description: "Cloudant DB prefix"
        type: "string"
        required: true
    persistence:
      pvcName:
        __metadata:
          label: "Cloudant PVC name"
          description: "Cloudant PVC name"
          type: "string"
          required: true
      size:
        __metadata:
          label: "Cloudant persistence size"
          description: "Cloudant persistence size"
          type: "string"
          required: true

  kafka:
    __metadata:
      label: "Kafka provider configuration"
    enabled:
      __metadata:
        label: "Kafka enabled"
        description: "if Kafka provider should be enabled"
        type: "boolean"
        required: true
    name:
      __metadata:
        label: "Kafka name"
        description: "Kafka name"
        type: "string"
        required: true
    imageName:
      __metadata:
        label: "Kafka image name"
        description: "Kafka image name"
        type: "string"
        required: true
    imageTag:
      __metadata:
        label: "Kafka image tag"
        description: "Kafka image tag"
        type: "string"
        required: true
    imagePullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "The image pull policy to apply for this image."
        type: "string"
        required: true
        options:
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
        - label: "IfNotPresent"
          value: "IfNotPresent"
    replicaCount:
      __metadata:
        label: "Kafka replica count"
        description: "Kafka replica count"
        type: "string"
        required: true
    restartPolicy:
      __metadata:
        label: "Kafka restart policy"
        description: "Kafka restart policy"
        type: "string"
        required: true
    apiPort:
      __metadata:
        label: "Kafka API port"
        description: "Kafka API port"
        type: "string"
        required: true
    dbPrefix:
      __metadata:
        label: "Kafka DB prefix"
        description: "Kafka DB prefix"
        type: "string"
        required: true

affinity:
  __metadata:
    label: "Node affinity configuration"
    description: "Labels used to tag Kubernetes worker nodes to enable scheduling affinity"
  enabled:
    __metadata:
      label: "Affinity enabled"
      description: "if affinity should be enabled"
      type: "boolean"
      required: true
  coreNodeLabel:
    __metadata:
      label: "Core node label"
      description: "Label used for worker nodes that should execute OpenWhisk core pods"
      type: "string"
      required: true
  edgeNodeLabel:
    __metadata:
      label: "Edge node label"
      description: "Label used for worker nodes that should execute OpenWhisk Ingress pods"
      type: "string"
      required: true
  invokerNodeLabel:
    __metadata:
      label: "Invoker node label"
      description: "Label used for worker nodes that should execute OpenWhisk Invoker pods and user actions"
      type: "string"
      required: true
  providerNodeLabel:
    __metadata:
      label: "Provider node label"
      description: "Label used for worker nodes that should execute OpenWhisk event provider pods"
      type: "string"
      required: true
