apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.nginx.serviceName | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    name: {{ .Values.nginx.serviceName | quote }}
spec:
  type: NodePort
  selector:
    name: {{ .Values.nginx.deploymentName | quote }}
  ports:
    - port: {{ .Values.nginx.httpPort }}
      targetPort: {{ .Values.nginx.httpPort }}
      {{- if .Values.nginx.httpNodePort }}
      nodePort: {{ .Values.nginx.httpNodePort }}
      {{- end }}
      name: http
    - port: {{ .Values.nginx.httpsPort }}
      targetPort: {{ .Values.nginx.httpsPort }}
      {{- if .Values.nginx.httpsNodePort }}
      nodePort: {{ .Values.nginx.httpsNodePort }}
      {{- end }}
      name: https-api
    - port: {{ .Values.nginx.httpsAdminPort }}
      targetPort: {{ .Values.nginx.httpsAdminPort }}
      {{- if .Values.nginx.httpsAdminNodePort }}
      nodePort: {{ .Values.nginx.httpsAdminNodePort }}
      {{- end }}
      name: https-admin

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.nginx.deploymentName | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    name: nginx
spec:
  replicas: {{ .Values.nginx.replicaCount }}
  template:
    metadata:
      labels:
        name: {{ .Values.nginx.deploymentName | quote }}
    spec:
      restartPolicy: Always

      {{- if .Values.affinity.enabled }}
      affinity:
{{ include "affinity.controlPlane" . | indent 8 }}
{{ include "affinity.selfAntiAffinity" ( .Values.nginx.deploymentName | quote ) | indent 8 }}
      {{- end }}

      volumes:
      - name: nginx-certs
        secret:
          secretName: {{ .Values.nginx.secretName | quote }}
      - name: nginx-conf
        configMap:
          name: {{ .Values.nginx.configmapName | quote }}
      - name: logs
        emptyDir: {}

      containers:
      - name: {{ .Values.nginx.deploymentName | quote }}
        imagePullPolicy: {{ .Values.nginx.imagePullPolicy | quote }}
        image: {{ .Values.nginx.image | quote }}
        ports:
        - name: http
          containerPort: {{ .Values.nginx.httpPort }}
        - name: http-api
          containerPort: {{ .Values.nginx.httpsPort }}
        - name: https-admin
          containerPort: {{ .Values.nginx.httpsAdminPort }}
        volumeMounts:
        - name: nginx-conf
          mountPath: "/etc/nginx/nginx.conf"
          subPath: "nginx.conf"
        - name: nginx-certs
          mountPath: "/etc/nginx/certs"
        - name: logs
          mountPath: "/logs"
