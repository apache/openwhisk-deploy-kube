---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "controller_service_name" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    name: {{ template "controller_service_name" . }}
spec:
  selector:
    name: {{ template "controller_statefulset_name" . }}
  ports:
    - port: {{ template "controller_port" . }}
      targetPort: {{ template "controller_port" . }}
      name: http
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "controller_statefulset_name" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    name: {{ template "controller_statefulset_name" . }} 
spec:
  replicas: {{ .Values.global.controllerReplicaCount | default 2 }}
  serviceName: {{ template "controller_service_name" . }}
  template:
    metadata:
      labels:
        name: {{ template "controller_statefulset_name" . }}
    spec:
      restartPolicy: Always

      {{- if .Values.global.affinity.enabled }}
      affinity:
{{ include "affinity.controlPlane" . | indent 8 }}
{{ include "affinity.selfAntiAffinity" ( include "controller_statefulset_name" . ) | indent 8 }}
      {{- end }}

      initContainers:
      # The controller must wait for kafka and couchdb to be ready before it starts
{{ include "readiness.waitForKafka" . | indent 6 }}
{{ include "readiness.waitForCouchDB" . | indent 6 }}

      containers:
      - name: {{ template "controller_statefulset_name" . }}
        imagePullPolicy: {{ .Values.controllerImagePullPolicy | default "IfNotPresent" | quote }}
        image: {{ .Values.controllerImage | default "openwhisk/controller" | quote }}
        command: ["/bin/bash", "-c", "COMPONENT_NAME=$(hostname | cut -d'-' -f2) /init.sh `hostname | cut -d'-' -f2`"]
        ports:
        - name: controller
          containerPort: {{ template "controller_port" . }}
        livenessProbe:
          httpGet:
            path: "/ping"
            port: {{ template "controller_port" . }}
            scheme: "HTTP"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
        env:
        - name: "PORT"
          value: {{ include "controller_port" . | quote }}

        # Loadbalancer options
        - name: "LOADBALANCER_INVOKERBUSYTHRESHOLD"
          value: "16"

        # action runtimes
        - name: "RUNTIMES_MANIFEST"
          value: {{ template "runtimes_manifest" . }}

        # this version is the day it is deployed and should be configured every time
        - name:  "WHISK_VERSION_DATE"
          value: "2017-01-01T00:00:00Z"
        # the buildno should be the docker image tag to use
        - name: "WHISK_VERSION_BUILDNO"
          value: "latest"
        - name: "WHISK_VERSION_NAME"
          value: ""

        # Java options
        - name: "JAVA_OPTS"
          value: "-Xmx2g"

        # Kafka properties
        - name: "KAFKA_HOSTS"
          value: {{ include "kafka_url_without_port" . }}:{{ .Values.global.kafkaPort | default 9092 }}
        - name: "KAFKA_HOST_PORT"
          value: {{ .Values.global.kafkaPort | default 9092 | quote }}

        # specific controller arguments
        - name: "CONTROLLER_OPTS"
          value: ""

        # properties for DB connection
{{ include "whisk.dbEnvVars" . | indent 8 }}

        - name: "LIMITS_ACTIONS_SEQUENCE_MAXLENGTH"
          value: {{ .Values.controllerLimitsActionsSequenceMaxlength | default 1000 | quote }}
        - name: "LIMITS_TRIGGERS_FIRES_PERMINUTE"
          value: {{ .Values.controllerLimitsTriggersFiresPerminute | default 100 | quote }}
        - name: "LIMITS_ACTIONS_INVOKES_PERMINUTE"
          value: {{ .Values.controllerLimitsActionsInvokesPerminute | default 100 | quote }}
        - name: "LIMITS_ACTIONS_INVOKES_CONCURRENTINSYSTEM"
          value: {{ .Values.controllerLimitsActionsInvokesConcurrentinsystem | default 100 | quote }}
        - name: "LIMITS_ACTIONS_INVOKES_CONCURRENT"
          value: {{ .Values.controllerLimitsActionsInvokesConcurrent | default 100 | quote }}

        - name: "CONTROLLER_INSTANCES"
          value: {{ .Values.global.controllerReplicaCount | default 2 | quote }}
        - name: "CONTROLLER_LOCALBOOKKEEPING"
          value: {{ .Values.controllerLocalbookkeeping | default false | quote }}
        - name: "AKKA_CLUSTER_SEED_NODES"
          value: {{ .Values.controllerSeedNodes | default "[]" | quote }}
        - name: "CONTROLLER_HA"
          value: {{ .Values.controllerHA | default false | quote }}
        - name: "CONFIG_akka_actor_provider"
          value: "cluster"
