# Licensed to the Apache Software Foundation (ASF) under one or more contributor
# license agreements; and to You under the Apache License, Version 2.0.

apiVersion: batch/v1
kind: Job
metadata:
  name: install-package-alarm
  namespace: {{ .Release.Namespace | quote }}
spec:
  activeDeadlineSeconds: 600
  template:
    metadata:
      name: install-package-alarm
    spec:
      restartPolicy: Never
      volumes:
      - name: task-dir
        configMap:
          name: install-package-alarms
      containers:
      - name: alarmpkginstaller
        image: {{ .Values.utility.scriptRunnerImage | quote }}
        imagePullPolicy: {{ .Values.utility.imagePullPolicy | quote }}
        volumeMounts:
        - name: task-dir
          mountPath: "/task/myTask.sh"
          subPath: "myTask.sh"
        env:
          - name: "AUTH"
            valueFrom:
              secretKeyRef:
                name: whisk.auth
                key: system
          # poorly named envvar; actually expects full apihost (host:port)
          - name: "APIHOST"
            valueFrom:
              configMapKeyRef:
                name: whisk.config
                key: whisk_api_host_nameAndPort
          {{- if .Values.alarmprovider.db.external }}
          # Config database using the external cloudant instance
          - name: "DB_PROTOCOL"
            value: {{ .Values.alarmprovider.db.protocol | quote }}
          - name: "DB_HOST"
            value: {{ .Values.alarmprovider.db.host | quote }}
          - name: "DB_USERNAME"
            value: {{ .Values.alarmprovider.db.username | quote }}
          - name: "DB_PASSWORD"
            value: {{ .Values.alarmprovider.db.password | quote }}
          - name: "DB_PORT"
            value: {{ .Values.alarmprovider.db.port | quote }}
          {{- else }}
          # for the database used by alarms package
          - name: "DB_HOST"
            valueFrom:
              configMapKeyRef:
                name: db.config
                key: db_host
          - name: "DB_PROTOCOL"
            valueFrom:
              configMapKeyRef:
                name: db.config
                key: db_protocol
          - name: "DB_PORT"
            valueFrom:
              configMapKeyRef:
                name: db.config
                key: db_port
          - name: "DB_USERNAME"
            valueFrom:
              secretKeyRef:
                name: db.auth
                key: db_username
          - name: "DB_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: db.auth
                key: db_password
          {{ end }}
          - name: "DB_PREFIX"
            value: "{{- .Values.alarmprovider.db.prefix -}}"
